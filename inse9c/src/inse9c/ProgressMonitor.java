/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inse9c;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Adam
 */
public class ProgressMonitor extends javax.swing.JFrame {

    int userID;

    /**
     * Creates new form progressMonitor
     */
    public ProgressMonitor() {
        initComponents();
    }

    public ProgressMonitor(int iD) throws SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        userID = iD;
        DAO dao = new DAO();
        ResultSet rs;
        rs = dao.getTenResultsByTopic(userID, "");
        populatePage(rs);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testType = new javax.swing.JComboBox<>();
        backButton = new javax.swing.JButton();
        res1 = new javax.swing.JLabel();
        res2 = new javax.swing.JLabel();
        res3 = new javax.swing.JLabel();
        res4 = new javax.swing.JLabel();
        res5 = new javax.swing.JLabel();
        res6 = new javax.swing.JLabel();
        res7 = new javax.swing.JLabel();
        res8 = new javax.swing.JLabel();
        res9 = new javax.swing.JLabel();
        res10 = new javax.swing.JLabel();
        resultScore1 = new javax.swing.JLabel();
        resultScore2 = new javax.swing.JLabel();
        resultScore3 = new javax.swing.JLabel();
        resultScore4 = new javax.swing.JLabel();
        resultScore5 = new javax.swing.JLabel();
        resultScore6 = new javax.swing.JLabel();
        resultScore7 = new javax.swing.JLabel();
        resultScore8 = new javax.swing.JLabel();
        resultScore9 = new javax.swing.JLabel();
        resultScore10 = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();
        date2 = new javax.swing.JLabel();
        date3 = new javax.swing.JLabel();
        date4 = new javax.swing.JLabel();
        date5 = new javax.swing.JLabel();
        date6 = new javax.swing.JLabel();
        date7 = new javax.swing.JLabel();
        date8 = new javax.swing.JLabel();
        date9 = new javax.swing.JLabel();
        date10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 460));

        testType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Results", "Mock Test", "Quiz", "Alertness", "Attitude", "Safety and your Vehicle", "Hazard Awareness", "Safety Margin", "Motorway Rules", "Vehicle Handling" }));
        testType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testTypeActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.setPreferredSize(new java.awt.Dimension(100, 30));
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(testType, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(res1)
                            .addComponent(res2)
                            .addComponent(res3)
                            .addComponent(res4)
                            .addComponent(res5)
                            .addComponent(res6)
                            .addComponent(res7)
                            .addComponent(res8)
                            .addComponent(res9)
                            .addComponent(res10))
                        .addGap(182, 182, 182)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultScore1)
                            .addComponent(resultScore2)
                            .addComponent(resultScore3)
                            .addComponent(resultScore4)
                            .addComponent(resultScore5)
                            .addComponent(resultScore6)
                            .addComponent(resultScore7)
                            .addComponent(resultScore8)
                            .addComponent(resultScore9)
                            .addComponent(resultScore10))
                        .addGap(123, 123, 123)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(date10)
                            .addComponent(date9)
                            .addComponent(date8)
                            .addComponent(date7)
                            .addComponent(date6)
                            .addComponent(date5)
                            .addComponent(date4)
                            .addComponent(date3)
                            .addComponent(date1)
                            .addComponent(date2))
                        .addGap(0, 276, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testType, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res1)
                    .addComponent(resultScore1)
                    .addComponent(date1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res2)
                    .addComponent(resultScore2)
                    .addComponent(date2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res3)
                    .addComponent(resultScore3)
                    .addComponent(date3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res4)
                    .addComponent(resultScore4)
                    .addComponent(date4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res5)
                    .addComponent(resultScore5)
                    .addComponent(date5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res6)
                    .addComponent(resultScore6)
                    .addComponent(date6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res7)
                    .addComponent(resultScore7)
                    .addComponent(date7))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res8)
                    .addComponent(resultScore8)
                    .addComponent(date8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res9)
                    .addComponent(resultScore9)
                    .addComponent(date9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(res10)
                    .addComponent(resultScore10)
                    .addComponent(date10))
                .addContainerGap(285, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void testTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testTypeActionPerformed

        DAO dao = new DAO();
        try {
            ResultSet rs;
            String tpc = "";
            if (testType.getSelectedItem().toString() == "All Results") {
                rs = dao.getTenResultsByTopic(userID, "");
            } else {
                rs = dao.getTenResultsByTopic(userID, testType.getSelectedItem().toString());
            }
            populatePage(rs);
        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_testTypeActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        Menu m = new Menu(userID);
        m.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public void populatePage(ResultSet rs) throws SQLException {
        res1.setText("");
        resultScore1.setText("");
        date1.setText("");

        res2.setText("");
        resultScore2.setText("");
        date2.setText("");

        res3.setText("");
        resultScore3.setText("");
        date3.setText("");

        res4.setText("");
        resultScore4.setText("");
        date4.setText("");

        res5.setText("");
        resultScore5.setText("");
        date5.setText("");

        res6.setText("");
        resultScore6.setText("");
        date6.setText("");

        res7.setText("");
        resultScore7.setText("");
        date7.setText("");

        res8.setText("");
        resultScore8.setText("");
        date8.setText("");

        res9.setText("");
        resultScore9.setText("");
        date9.setText("");

        res10.setText("");
        resultScore10.setText("");
        date10.setText("");

        rs.next();
        rs.previous();
        if (rs.next()) {
            res1.setText(rs.getString("testType"));
            if (res1.getText().matches("Mock Test")) {
                resultScore1.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore1.setText(rs.getString("testScore") + "/10");
            }
            date1.setText(rs.getString("testDate"));
        }

        rs.next();
        rs.previous();
        if (rs.next()) {
            res2.setText(rs.getString("testType"));
            if (res2.getText().matches("Mock Test")) {
                resultScore2.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore2.setText(rs.getString("testScore") + "/10");
            }
            date2.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res3.setText(rs.getString("testType"));
            if (res3.getText().matches("Mock Test")) {
                resultScore3.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore3.setText(rs.getString("testScore") + "/10");
            }
            date3.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res4.setText(rs.getString("testType"));
            if (res4.getText().matches("Mock Test")) {
                resultScore4.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore4.setText(rs.getString("testScore") + "/10");
            }
            date4.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res5.setText(rs.getString("testType"));
            if (res5.getText().matches("Mock Test")) {
                resultScore5.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore5.setText(rs.getString("testScore") + "/10");
            }
            date5.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res6.setText(rs.getString("testType"));
            if (res6.getText().matches("Mock Test")) {
                resultScore6.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore6.setText(rs.getString("testScore") + "/10");
            }
            date6.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res7.setText(rs.getString("testType"));
            if (res7.getText().matches("Mock Test")) {
                resultScore7.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore7.setText(rs.getString("testScore") + "/10");
            }
            date7.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res8.setText(rs.getString("testType"));
            if (res8.getText().matches("Mock Test")) {
                resultScore8.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore8.setText(rs.getString("testScore") + "/10");
            }
            date8.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res9.setText(rs.getString("testType"));
            if (res9.getText().matches("Mock Test")) {
                resultScore9.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore9.setText(rs.getString("testScore") + "/10");
            }
            date9.setText(rs.getString("testDate"));
        }
        rs.next();
        rs.previous();
        if (rs.next()) {
            res10.setText(rs.getString("testType"));
            if (res10.getText().matches("Mock Test")) {
                resultScore10.setText(rs.getString("testScore") + "/50");
            } else {
                resultScore10.setText(rs.getString("testScore") + "/10");
            }
            date10.setText(rs.getString("testDate"));
        }

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProgressMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProgressMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProgressMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProgressMonitor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProgressMonitor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel date1;
    private javax.swing.JLabel date10;
    private javax.swing.JLabel date2;
    private javax.swing.JLabel date3;
    private javax.swing.JLabel date4;
    private javax.swing.JLabel date5;
    private javax.swing.JLabel date6;
    private javax.swing.JLabel date7;
    private javax.swing.JLabel date8;
    private javax.swing.JLabel date9;
    private javax.swing.JLabel res1;
    private javax.swing.JLabel res10;
    private javax.swing.JLabel res2;
    private javax.swing.JLabel res3;
    private javax.swing.JLabel res4;
    private javax.swing.JLabel res5;
    private javax.swing.JLabel res6;
    private javax.swing.JLabel res7;
    private javax.swing.JLabel res8;
    private javax.swing.JLabel res9;
    private javax.swing.JLabel resultScore1;
    private javax.swing.JLabel resultScore10;
    private javax.swing.JLabel resultScore2;
    private javax.swing.JLabel resultScore3;
    private javax.swing.JLabel resultScore4;
    private javax.swing.JLabel resultScore5;
    private javax.swing.JLabel resultScore6;
    private javax.swing.JLabel resultScore7;
    private javax.swing.JLabel resultScore8;
    private javax.swing.JLabel resultScore9;
    private javax.swing.JComboBox<String> testType;
    // End of variables declaration//GEN-END:variables
}
